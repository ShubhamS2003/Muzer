// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String     @default("Muzi")
  imageUrl  String     @default("")
  provider  Provider
  streams   Stream[]
  upvotes   Upvote[]
  rooms     Room[]
}

model Room {
  id        String    @id @default(uuid())
  genre     String    @default("Bollywood")
  name      String
  live      Boolean   @default(true)
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  streams   Stream[]
}

model Stream {
  id               String     @id @default(uuid())
  type             StreamType
  url              String
  extractedId      String
  title            String     @default("")
  smallImg         String     @default("")
  bigImg           String     @default("")
  active           Boolean    @default(true)
  upvotes          Upvote[]
  userId           String
  user             User       @relation(fields: [userId], references: [id])
  roomId           String
  room             Room       @relation(fields: [roomId], references: [id])
}

model Upvote {
  id        String      @id @default(uuid())
  userId    String
  streamId  String
  user      User      @relation(fields: [userId], references: [id])
  stream    Stream    @relation(fields: [streamId], references: [id])
  @@unique([userId, streamId])
}

enum StreamType {
  Spotify
  Youtube
}

enum Provider {
  Google
}
